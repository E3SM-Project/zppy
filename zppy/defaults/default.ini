[default]
# Set to True to run a task.
active = boolean(default=False)
# Specify account to use.
account = string(default="")
# Specify bundle that jobs should be run in.
bundle = string(default="")
# Specify which campaign you are running.
campaign = string(default="none")
# The case name of the simulation
# NOTE: no default, must be provided by user
case = string
# The constraint of the machine to run on
constraint = string(default="")
# Set to True to keep temporary directories/files after zppy completes
debug = boolean(default=False)
# diagnostics_base_path -- NOTE: this parameter is created internally
# This should be set to True if you don't want the batch jobs to be submitted
dry_run = boolean(default=False)
# Set up the environment -- this is where you can tell zppy to use a custom conda environment.
# To use a custom conda environment, you can set `environment_commands="source <path to conda.sh>; conda activate <custom environment>"`.
environment_commands = string(default="")
# If set to True, zppy will fail as soon as a job is unable to launch because of a missing dependency.
# If set to False, zppy will launch other jobs, if possible.
fail_on_dependency_skip = boolean(default=False)
# The frequency of the data. Options include "monthly", "diurnal_8xdaily"
frequency = string(default="monthly")
# The grid to use
grid = string(default="")
# These two parameters enable zppy to infer path or section parameters.
# This allows users to set fewer parameters, but with the risk of zppy choosing incorrect values for them.
# Set to False for more transparency in path or section defintions.
infer_path_parameters = boolean(default=True)
infer_section_parameters = boolean(default=True)
# The directory to be post-processed
# NOTE: no default, must be provided by user
input = string
# Which files to use as input
input_files = string(default="eam.h0")
# The specific subdirectory with the atmospheric data
input_subdir = string(default="archive/atm/hist")
# machine -- NOTE: this parameter is created internally
# The mapping file to use
mapping_file = string(default="")
# The number of nodes to use
nodes = integer(default=1)
# Where the post-processing results (`post` directory) should go
# NOTE: no default, must be provided by user
output = string
# The `parallel` option for ncclimo
parallel = string(default="")
# The partition of the machine to run on
partition = string(default="")
# External zppy plugin modules
plugins = force_list(default=list())
# Quality of service
qos = string(default="regular")
# Reservation -- if you have access to a node reservation, specify it with this parameter.
reservation = string(default="")
# Use for e3sm_to_cmip and/or ilamb tasks.
# Name of the grid used by the relevant `[ts]` atm subtask
ts_atm_grid = string(default="180x360_aave")
# Use for e3sm_to_cmip and/or ilamb tasks.
# Name of the `[ts]` atm subtask to depend on
ts_atm_subsection = string(default="")
# Use for e3sm_to_cmip task (but NOT the ilamb task) -- you can either set this, or
# both ts_atm_grid and ts_land_grid
# Name of the grid used by the relevant `[ts]` task
ts_grid = string(default="180x360_aave")
# Use for e3sm_to_cmip and/or ilamb tasks.
# Name of the grid used by the relevant `[ts]` land subtask
ts_land_grid = string(default="180x360_aave")
# Use for e3sm_to_cmip and/or ilamb tasks.
# Name of the `[ts]` land subtask to depend on
ts_land_subsection = string(default="")
# The years increment from `years` in `[ts]`
ts_num_years = integer(default=5)
# Use for e3sm_to_cmip task (but NOT the ilamb task) -- you can either set this, or
# both ts_atm_subsection and ts_land_subsection
# Name of the `[ts]` subtask to depend on
ts_subsection = string(default="")
# scriptDir -- NOTE: this parameter is created internally
# templateDir -- NOTE: this parameter is created internally
# The variables to process
# If `vars` is set to "", then climo and ts will process *all* variables.
# This is accomplished by not setting `-v`/`--vars` for `ncclimo`.
vars = string(default="FSNTOA,FLUT,FSNT,FLNT,FSNS,FLNS,SHFLX,QFLX,TAUX,TAUY,PRECC,PRECL,PRECSC,PRECSL,TS,TREFHT,CLDTOT,CLDHGH,CLDMED,CLDLOW,U")
# DEPRECATED: vars_exclude
# This is the list of variables to exclude. It is only used if `vars` is set to "".
# vars_exclude = string(default="H2OSOI,LAKEICEFRAC,O_SCALAR,PCT_LANDUNIT,PCT_NAT_PFT,SOILICE,SOILICE_ICE,SOILLIQ,SOILLIQ_ICE,SOILPSI,T_SCALAR,TLAKE,TSOI,TSOI_ICE,W_SCALAR")
# The maximum time to run
walltime = string(default="02:00:00")
# web_portal_base_path -- NOTE: this parameter is created internally
# web_portal_base_url -- NOTE: this parameter is created internally
# Where the post-processing visuals should go (to be viewed online)
# NOTE: no default, must be provided by user
www = string
# The years to run; "1:100:20" would mean process years 1-100 in 20-year increments
years = string_list(default=list(""))

[bundle]
# NOTE: always overrides value in [default]
active = boolean(default=True)

  [[__many__]]
  active = boolean(default=None)

[climo]
exclude = boolean(default=False)
# NOTE: always overrides value in [default]
parallel = string(default="mpi")
# NOTE: always overrides value in [default]
nodes = integer(default=4)
# NOTE: always overrides value in [default]
vars = string(default="")
# Model component having generated input files (eam, eamxx, elm, mosart, ...)
input_component = string(default="")

  [[__many__]]
  exclude = boolean(default=None)
  nodes = integer(default=None)
  vars = string(default=None)
  input_component = string(default=None)

[ts]
area_nm = string(default="area")
# Days per file
dpf = integer(default=30)
extra_vars = string(default="")
# Time-steps per day
tpd = integer(default=1)
# Model component having generated input files (eam, eamxx, elm, mosart, ...)
input_component = string(default="")

  [[__many__]]
  area_nm = string(default=None)
  dpf = integer(default=None)
  extra_vars = string(default=None)
  tpd = integer(default=None)
  input_component = string(default=None)

[e3sm_to_cmip]
# Metadata json file
cmip_metadata = string(default="inclusions/e3sm_to_cmip/default_metadata.json")
# variables to run e3sm_to_cmip on
cmip_vars = string(default="")
# Model component having generated input files (eam, eamxx, elm, mosart, ...)
input_component = string(default="")

  [[__many__]]
  cmip_metadata = string(default=None)
  cmip_vars = string(default=None)
  input_component = string(default=None)

[tc_analysis]
# NOTE: always overrides value in [default]
input_files = string(default="eam.h2")
# Resolution to use for `--res` option.
# If not set, zppy will attempt to infer this value from the topography file.
res = string(default="")

[e3sm_diags]
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
backend = string(default="mpl")
cfg = string(default="")
# Name of the frequency from `[climo]` to use for "diurnal_cycle" runs
# Required for "diurnal_cycle" runs
climo_diurnal_frequency = string(default="")
# Name of the subsection of `[climo]` to use for "diurnal_cycle" runs
climo_diurnal_subsection = string(default="")
# Name of the `[climo]` subtask
climo_subsection = string(default="")
# Path to observation data for "diurnal_cycle" runs
dc_obs_climo = string(default="")
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
# Required for run_type="model_vs_model"
diff_title = string(default="Model - Observations")
# Set this to False if the E3SM Diags model-vs-model output path should exclude the case name.
keep_mvm_case_name_in_fig = boolean(default=True)
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
# Required for run_type="model_vs_model" "streamflow" runs
gauges_path = string(default="")
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
multiprocessing = boolean(default=True)
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
num_workers = integer(default=24)
# Path to observation data for most time-series-required ("enso_diags","qbo","area_mean_time_series") runs
obs_ts = string(default="")
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
output_format = string_list(default=list("png"))
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
output_format_subplot = string_list(default=list())
# Final year (i.e., the last available year) for the reference data
# Required for "qbo" runs
# Required for run_type="model_vs_model" "enso_diags"/"streamflow"/"tc_analysis"/"tropical_subseasonal" runs
ref_final_yr = string(default="")
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
# Required for run_type="model_vs_model"
ref_name = string(default="")
# Start year for the reference data
# Required for "enso_diags"/"qbo" runs
# Required for run_type="model_vs_model" "tropical_subseasonal"/"streamflow"/"tc_analysis" runs
ref_start_yr = string(default="")
# The ref years to run; "1:100:20" would mean process years 1-100 in 20-year increments
# Recommended for run_type="model_vs_model"
# e3sm_diags.py will set to match `years` if not specified
ref_years = string_list(default=list(""))
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
# Required for run_type="model_vs_model"
reference_data_path = string(default="")
# `reference_data_path` but for "diurnal_cycle" runs
# Required for run_type="model_vs_model" "diurnal_cycle" runs
reference_data_path_climo_diurnal = string(default="")
# `reference_data_path` but for "tc_analysis" runs
# Required for run_type="model_vs_model" "tc_analysis" runs
reference_data_path_tc = string(default="")
# `reference_data_path` but for "enso_diags"/"qbo"/"area_mean_time_series" runs
# Required for run_type="model_vs_model" "enso_diags"/"qbo"/"area_mean_time_series" runs
reference_data_path_ts = string(default="")
# Required for run_type="model_vs_model" "tropical_subseasonal" runs
reference_data_path_ts_daily = string(default="")
# `reference_data_path` but for "streamflow" runs
# Required for run_type="model_vs_model" "streamflow" runs
reference_data_path_ts_rof = string(default="")
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
# Some additional parameters are required if run_type="model_vs_model"
# Search for `Required for run_type="model_vs_model"` in this file.
run_type = string(default="model_vs_obs")
# The sets to run
# All available sets (17) = "aerosol_aeronet","aerosol_budget","annual_cycle_zonal_mean","area_mean_time_series","cosp_histogram","diurnal_cycle","enso_diags","lat_lon","meridional_mean_2d","polar","qbo","streamflow","tc_analysis", "tropical_subseasonal", "zonal_mean_2d","zonal_mean_2d_stratosphere","zonal_mean_xy"
# To find the parameters required for a set, search for the set's name in this file.
# The order of the `sets` list is the order the sets will show up in E3SM Diags.
# `sets` below are ordered by 1) core or speciality and then 2) older to newer.
sets = string_list(default=list("lat_lon","zonal_mean_xy","zonal_mean_2d","polar","cosp_histogram","meridional_mean_2d","annual_cycle_zonal_mean","zonal_mean_2d_stratosphere","aerosol_aeronet","aerosol_budget"))
# Used for `test_name` and `short_test_name` in https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
short_name = string(default="")
# See https://e3sm-project.github.io/e3sm_diags/_build/html/master/available-parameters.html
# Required for run_type="model_vs_model"
short_ref_name = string(default="")
# Path to observation data for "streamflow" runs
streamflow_obs_ts = string(default="")
# Set to true to swap test and ref when run_type="model_vs_model"
swap_test_ref = boolean(default=False)
# Used to label the results directory
# Options are "model_vs_obs" and "model_vs_model"
tag = string(default="model_vs_obs")
# Path to observation data for "tc_analysis" runs
tc_obs = string(default="")
# The years increment for reference data
# Required for run_type="model_vs_model" "enso_diags"/"qbo"/"area_mean_time_series"/"tropical_subseasonal"/"streamflow" runs
ts_num_years_ref = integer(default=5)
# Name of the `[ts]` subtask to depend on
# Required for run_type="model_vs_model" "enso_diags"/"qbo"/"area_mean_time_series"/"tropical_subseasonal"/"streamflow" runs
ts_subsection = string(default="")
# Required for "tropical_subseasonal" run
ts_daily_subsection = string(default="")

  [[__many__]]
  backend = string(default=None)
  cfg = string(default=None)
  climo_diurnal_frequency = string(default=None)
  climo_diurnal_subsection = string(default=None)
  climo_subsection = string(default=None)
  dc_obs_climo = string(default=None)
  diff_title = string(default=None)
  gauges_path = string(default=None)
  multiprocessing = boolean(default=None)
  num_workers = integer(default=None)
  obs_ts = string(default=None)
  output_format = string_list(default=None)
  output_format_subplot = string_list(default=None)
  ref_final_yr = string(default=None)
  ref_name = string(default=None)
  ref_start_yr = string(default=None)
  ref_years = string_list(default=None)
  reference_data_path = string(default=None)
  reference_data_path_climo_diurnal = string(default=None)
  reference_data_path_tc = string(default=None)
  reference_data_path_ts = string(default=None)
  reference_data_path_ts_daily = string(default=None)
  reference_data_path_ts_rof = string(default=None)
  run_type = string(default=None)
  sets = string_list(default=None)
  short_name = string(default=None)
  short_ref_name = string(default=None)
  streamflow_obs_ts = string(default=None)
  swap_test_ref = boolean(default=None)
  tag = string(default=None)
  tc_obs = string(default=None)
  ts_num_years_ref = integer(default=None)
  ts_subsection = string(default=None)
  ts_daily_subsection = string(default=None)

[mpas_analysis]
anomalyRefYear = integer(default=1)
cache = boolean(default=True)
# Note that environment_commands needs to be the same for all related runs of [mpas_analysis].
# For example, if years 1-50 are run using one environment and years 51-100 are run using another, MPAS-Analysis may fail.
generate = string_list(default=list('all', 'no_landIceCavities', 'no_BGC', 'no_icebergs', 'no_min', 'no_max', 'no_sose', 'no_waves', 'no_eke', 'no_climatologyMapAntarcticMelt', 'no_regionalTSDiagrams', 'no_timeSeriesAntarcticMelt', 'no_timeSeriesOceanRegions', 'no_climatologyMapSose', 'no_woceTransects', 'no_soseTransects', 'no_geojsonTransects', 'no_oceanRegionalProfiles', 'no_hovmollerOceanRegions', 'no_oceanConservation'))
mapMpiTasks = integer(default=6)
mpaso_nml = string(default="mpaso_in")
mpassi_nml = string(default="mpassi_in")
ncclimoThreads = integer(default=12)
ncclimoParallelMode = string(default="bck")
parallelTaskCount = integer(default=12)
PostMOC = boolean(default=False)
purge = boolean(default=False)
shortTermArchive = boolean(default=True)
stream_ice = string(default="streams.seaice")
stream_ocn = string(default="streams.ocean")
# NOTE: always overrides value in [default]
walltime = string(default="06:00:00")

[global_time_series]
climo_years = string_list(default=list(""))
# The color to be used for the graphs.
color = string(default="Blue")
experiment_name = string(default="")
# What the plot files should be named
figstr = string(default="")
# Set to True to construct a Viewer page
make_viewer = boolean(default=False)
# regions to plot: glb, n, s (global, northern hemisphere, southern hemisphere)
regions = string(default="glb,n,s")
ts_years = string_list(default=list(""))
# `years = "1-100",` would plot years 1 to 100 on the graphs.
#
# These are only needed if make_viewer = False (default):
#
# The specific subdirectory with the ocean data
# NOTE: always overrides value in [default]
input_subdir = string(default="archive/ocn/hist")
moc_file = string(default="")
# nrows, ncols are DEPRECATED. Specifying them will have no effect.
# Number of columns per page
ncols = integer(default=2)
# Number of rows per page
nrows = integer(default=4)
# The names of the plots you want displayed
# Variable requirements:
# net_toa_flux_restom requires RESTOM
# net_atm_energy_imbalance requires RESTOM, RESSURF
# global_surface_air_temperature requires TREFHT
# toa_radiation requires FSNTOA, FLUT
# net_atm_water_imbalance requires PRECC, PRECL, QFLX
# Remove the 3 ocean plots (change_ohc,max_moc,change_sea_level) if you don't have ocean data.
plots_original = string(default="net_toa_flux_restom,global_surface_air_temperature,toa_radiation,net_atm_energy_imbalance,change_ohc,max_moc,change_sea_level,net_atm_water_imbalance")
#
# These are only needed if make_viewer = True:
#
# The names of the extra plots you want displayed (i.e., define specific variables)
# These should be a subset of the `vars` generated by the `ts` `glb` subtasks.
plots_atm = string(default="")
plots_ice = string(default="")
# Set `plots_lnd = "all"` to run every variable in the land csv file.
plots_lnd = string(default="")
plots_ocn = string(default="")

  [[__many__]]
  climo_years = string_list(default=None)
  color = string(default=None)
  experiment_name = string(default=None)
  figstr = string(default=None)
  input_subdir = string(default=None)
  make_viewer = boolean(default=None)
  moc_file = string(default=None)
  ncols = integer(default=None)
  nrows = integer(default=None)
  plots_original = string(default=None)
  plots_atm = string(default=None)
  plots_ice = string(default=None)
  plots_lnd = string(default=None)
  plots_ocn = string(default=None)
  regions = string(default=None)
  ts_years = string_list(default=None)

[ilamb]
cfg = string(default="inclusions/ilamb/ilamb.cfg")
# Name of the `[e3sm_to_cmip]` atm subtask to depend on
e3sm_to_cmip_atm_subsection = string(default="")
# Name of the `[e3sm_to_cmip]` land subtask to depend on
e3sm_to_cmip_land_subsection = string(default="")
# observational data path, default uses mache's "diagnostics_base_path"
ilamb_obs = string(default="")
# for land_only run
land_only = boolean(default=False)
